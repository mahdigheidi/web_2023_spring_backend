// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "MohammadMahdi Gheidi",
            "email": "gheidimahdi@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/req_dh_params": {
            "get": {
                "description": "after receiving p/g params from req_pq, communicate the keys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "req_dh_params"
                ],
                "summary": "handshake on diffie-hellman parameters between server/client",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/req_pq": {
            "get": {
                "description": "this endpoint will request the p and g parameters of the diffie-hellman",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "req_pq"
                ],
                "summary": "request p/g params diffie-hellman",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/biz/get_users": {
            "get": {
                "description": "this endpoint will fetch the user with the id provided in the request or if no id is provided will return last 100 rows of db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get_users"
                ],
                "summary": "lets you do a query on db with secure functionality and no injection",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/biz/get_users_with_sql_injection": {
            "get": {
                "description": "will not perform any security check on the input given by user and will execute the query without any checks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get_users_with_sql_injection"
                ],
                "summary": "enables you to perform a query on the db with injection feature",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:6433",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Web 2023 Backend HW - Gateway service",
	Description:      "This is a simple documentation on the gateway service which is a part of backend homework of WebDev course in spring 2023.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
